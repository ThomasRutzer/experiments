@import "./../colors/colors.json";
@import "./../layout/layout-definitions.json";
@import "./../spacing/spacing-definitions.json";

$modal-close-background-color: $color-dark;
$modal-close-icon-fill: $color-highlight;

$modal-dimmer-background-color: rgba($color-secondary-highlight, 0.1);

.modal {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: map-deep-get($layout, "global-z-indexes", "modal");

  &.modal__content--enter-active,
  &.modal__content--leave-active {
    transition: transform 500ms, opacity 500ms;
  }

  @include mq($until: 'm') {
    &.modal__content--enter,
    &.modal__content--leave-to {
      transform: translateX(-100%);
    }
  }

  @include mq($from: 'm') {
    &.modal__content--enter,
    &.modal__content--leave-to {
      opacity: 0;
    }
  }

  &__backdrop {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: $modal-dimmer-background-color;
  }

  &__wrapper {
    position: relative;
    display: flex;
    width: 100%;
    height: 100%;
    align-items: center;
    box-sizing: border-box;

    @include mq($from: 'm') {
      padding: 0 calc((100vw - #{map_get($layout, "content-area-width-medium")}) / 2);
    }
  }

  &__container {
    width: 100vw;
    height: 100vh;
    display: flex;
    flex-direction: column;
    justify-content: space-around;
    background-color: rgba($color-secondary-highlight-shaded, 0.9);

    @include mq($from: 'm') {
      max-height: calc(100vh - (#{map_get($layout, "header-height")} + #{map_get($layout, "footer-height")}));
      max-width: 100%;
      background-color: transparent;
    }
  }

  &__header {
      display: flex;
      align-items: center;
      justify-content: space-between;
      padding: map_get($spacing-sizes, 's');
      color: $color-lightest;
      min-height: map_get($layout, "header-height");

      @include mq($from: 'm') {
          padding: map_get($spacing-sizes, 's') 0;
      }
  }

  &__footer {
      display: flex;
      align-items: center;
      padding: map_get($spacing-sizes, 's');
      min-height: map_get($layout, "footer-height");

      @include mq($from: 'm') {
          padding: map_get($spacing-sizes, 's') 0;
      }
  }

  &__content {
    position: relative;
    color: $color-lightest;
    transition: all 500ms ease-out;
    opacity: 1;
    overflow: hidden;
    overflow-y: auto;
    padding: map_get($spacing-sizes, 's');

    @include mq($from: 'm') {
       padding: map_get($spacing-sizes, 's') 0;
    }
  }
}
